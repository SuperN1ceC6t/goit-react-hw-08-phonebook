{"version":3,"file":"static/js/849.0e3b33be.chunk.js","mappings":"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","sources":["redux/constacts/selectors.js","components/ContactForm/ContactForm.module.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.module.jsx","components/Filter/Filter.jsx","components/ListItem/ListItem.module.jsx","components/ListItem/ListItem.jsx","components/ContactList/ContactList.module.jsx","components/ContactList/ContactList.jsx","Pages/Contacts/Contacts.module.jsx","Pages/Contacts/Contacts.jsx","components/Section/Section.module.jsx","components/Section/Section.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  max-width: 250px;\n  margin: 0 auto;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 0.5rem;\n`;\n\nexport const Input = styled.input`\n  padding: 0.5rem;\n  margin-top: 0.3rem;\n  font-size: 1rem;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  margin-left: 20px;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  color: #fff;\n  background-color: #f44336;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContactsList } from 'redux/constacts/selectors';\nimport { addContact } from 'redux/constacts/operations';\n\nimport { Form, Input, Label, Button } from './ContactForm.module';\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in contacts`);\n    }\n\n    if (contacts.some(({ number }) => number === formNumber)) {\n      return alert(`${formNumber} is already in contacts`);\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n      .unwrap()\n      .then(originalPromiseResult => {\n        console.log(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        console.log(\"Sorry, something's wrong\");\n      });\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name ...\"\n          value={contacts.name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter number ...\"\n          value={contacts.number}\n        />\n      </Label>\n      <Button type=\"submit\">New contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  margin-bottom: 1rem;\n  min-width: 200px;\n`;\nexport const Input = styled.input`\n  padding: 0.5rem;\n  font-size: 1rem;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  width: 100%;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setContactsFilter } from 'redux/constacts/filtersSlice';\nimport { selectContactsFilter } from 'redux/constacts/selectors';\n\nimport { Label, Input } from './Filter.module';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n\n  return (\n    <Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const UserIcon = styled.div`\n  padding: 8px;\n\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n\n  border-radius: 12px;\n\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const PhoneIcon = styled.div`\n  padding: 8px;\n\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n\n  border-radius: 12px;\n\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const UserDeletedIcon = styled.div`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 400px;\n  height: 40px;\n  padding: 5px;\n  font-size: 16px;\n  background-color: white;\n`;\n\nexport const ContactName = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  background-color: #f44336;\n  color: white;\n  padding: 5;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n`;\n","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/constacts/operations';\n\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n  UserDeletedIcon,\n} from './ListItem.module';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        console.log(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        console.log(\"Sorry, something's wrong\");\n      });\n  };\n\n  return (\n    <ContactItem key={id}>\n      <ContactName>Name: {name}</ContactName>\n      <ContactNumber>Number: {number}</ContactNumber>\n      <Button onClick={() => handleDeleteContact(id)}>\n        <UserDeletedIcon />\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  overflow: auto;\n`;\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectContactsFilter,\n  selectContactsList,\n} from 'redux/constacts/selectors';\n\nimport { ContactsListItem } from '../ListItem/ListItem';\nimport { ContactsList } from './ContactList.module';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = [\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n  ];\n\n  return (\n    <ContactsList>\n      {visibleContacts.map(({ name, number, id }) => (\n        <ContactsListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ContactsList>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const AddUserIcon = styled.div`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\nexport const ContentPageContainer = styled.div`\n  padding: 38px 48px;\n  height: 100vh;\n\n  border-radius: 32px 32px 0 0;\n  background-color: #f9f9f9;\n`;\nexport const ContactNavWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 28px;\n`;\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n\n  margin: 0;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  gap: 30px;\n  width: 65%;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  div {\n    padding: 8px;\n    background-color: #ffc4c4;\n    width: 288px;\n    font-size: 14px;\n    &::first-letter {\n      text-transform: uppercase;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 40px;\n  font-size: 16px;\n  &::placeholder {\n    font-size: 16px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 150px;\n  height: 40px;\n  transform: scale(1);\n  font-size: 16px;\n  transition: transform 250ms ease-out, background-color 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    transform: scale(1.1);\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/constacts/operations';\nimport { selectError, selectIsLoading } from 'redux/constacts/selectors';\n\nimport { Section } from '../../components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport {\n  ContactNavWrapper,\n  ContentPageContainer,\n  FilterWrapper,\n  Title,\n} from './Contacts.module';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContentPageContainer>\n      <Section>\n        <ContactNavWrapper>\n          <Title>Contacts</Title>\n          <FilterWrapper>\n            <Filter />\n          </FilterWrapper>\n        </ContactNavWrapper>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      <Section title=\"Add New Contact\">\n        <ContactForm />\n      </Section>\n    </ContentPageContainer>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  margin: 2rem 0;\n  padding: 1rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: bold;\n  margin-bottom: 1rem;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionContainer, Title } from './Section.module';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionContainer>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionContainer>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","ContactForm","dispatch","useDispatch","useSelector","_jsxs","onSubmit","e","preventDefault","form","target","formName","elements","name","value","formNumber","number","some","_ref","alert","concat","_ref2","addContact","toString","unwrap","then","originalPromiseResult","console","log","catch","reset","autoComplete","children","_jsx","type","title","required","placeholder","Filter","filter","onChange","normalizedValue","currentTarget","toLowerCase","trim","setContactsFilter","UserDeletedIcon","ContactItem","ContactName","_templateObject5","ContactNumber","_templateObject6","_templateObject7","ContactsListItem","id","onClick","userId","deleteContact","ContactsList","ContactList","visibleContacts","_toConsumableArray","contact","includes","map","ContentPageContainer","ContactNavWrapper","Title","FilterWrapper","_templateObject8","_templateObject9","useEffect","fetchContacts","Section","SectionContainer"],"sourceRoot":""}